server:
  port: ${services.front50.port:8080}
  address: ${services.front50.host:localhost}

hystrix:
  command:
    default.execution.isolation.thread.timeoutInMilliseconds: 15000
  threadpool:
    DefaultNotificationDAO:
      coreSize: 25
      maxQueueSize: 100
    DefaultPipelineDAO:
      coreSize: 25
      maxQueueSize: 100

cassandra:
  enabled: ${services.front50.cassandra.enabled:true}
  embedded: ${services.cassandra.embedded:false}
  host: ${services.cassandra.host:localhost}

aws:
  simpleDBEnabled: ${providers.aws.simpleDBEnabled:false}
  defaultSimpleDBDomain: ${providers.aws.defaultSimpleDBDomain}

spinnaker:
  cassandra:
    enabled: ${services.front50.cassandra.enabled:true}
    host: ${services.cassandra.host:localhost}
    port: ${services.cassandra.port:9042}
    cluster: ${services.cassandra.cluster:CASS_SPINNAKER}
    keyspace: front50
    name: global

  redis:
    enabled: ${services.front50.redis.enabled:false}
    host: ${services.front50.redis.host:localhost}
    port: ${services.front50.redis.port:6379}
    configuration:
      secure: ${services.front50.redis.configuration.secure:false}

  gcs:
    enabled: ${services.front50.gcs.enabled:false}
    bucket: ${services.front50.storage_bucket:}
    # See https://cloud.google.com/storage/docs/managing-buckets#manage-class-location
    bucketLocation: ${services.front50.bucket_location:}
    rootFolder: ${services.front50.bucket_root:front50}
    project: ${services.front50.gcs.project}
    jsonPath: ${services.front50.gcs.jsonPath}

  s3:
    enabled: ${services.front50.s3.enabled:false}
    bucket: ${services.front50.storage_bucket:}
    rootFolder: ${services.front50.bucket_root:front50}

  azs:
    enabled: ${services.front50.azs.enabled:false}
    storageAccountName: ${services.front50.azs.storageAccountName}
    storageAccountKey: ${services.front50.azs.storageAccountKey}
    storageContainerName: ${services.front50.azs.storageContainerName:front50}

spectator:
  applicationName: ${spring.application.name}
  webEndpoint:
    enabled: ${services.spectator.webEndpoint.enabled:false}
    prototypeFilter:
      path: ${services.spectator.webEndpoint.prototypeFilter.path:}

  stackdriver:
    enabled: ${services.stackdriver.enabled}
    projectName: ${services.stackdriver.projectName}
    credentialsPath: ${services.stackdriver.credentialsPath}
